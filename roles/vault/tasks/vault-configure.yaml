---
- name: Prepare Vault directories
  block:
    - name: Create '{{ vault_keys_dir }}' path
      ansible.builtin.file:
        path: '{{ vault_keys_dir }}'
        state: directory
        owner: '{{ vault_user }}'
        group: '{{ vault_group }}'
        mode: '0755'

    - name: Create '{{ vault_home_dir }}' path
      ansible.builtin.file:
        path: '{{ vault_home_dir }}'
        state: directory
        owner: '{{ vault_user }}'
        group: '{{ vault_group }}'
        mode: '0755'

    - name: Create '{{ vault_data_dir }}' path
      ansible.builtin.file:
        path: '{{ vault_data_dir }}'
        state: directory
        owner: '{{ vault_user }}'
        group: '{{ vault_group }}'
        mode: '0755'

- name: Prepare certificates
  block:
    - name: Copy TLS certificate
      ansible.builtin.copy:
        src: files/vlt.vrsf.in.crt
        dest: '{{ vault_tls_cert_file }}'
        owner: '{{ vault_user }}'
        group: '{{ vault_group }}'
        mode: '0600'

    - name: Copy TLS key
      ansible.builtin.copy:
        src: files/vlt.vrsf.in.key
        dest: '{{ vault_tls_key_file }}'
        owner: '{{ vault_user }}'
        group: '{{ vault_group }}'
        mode: '0600'

- name: Prepare Vault environment file
  ansible.builtin.template:
    src: vault.env.j2
    dest: '{{ vault_home_dir }}/vault.env'
    owner: '{{ vault_user }}'
    group: '{{ vault_group }}'
    mode: '0600'

- name: Prepare Vault configuration
  ansible.builtin.template:
    src: vault.hcl.j2
    dest: '{{ vault_home_dir }}/vault.hcl'
    owner: '{{ vault_user }}'
    group: '{{ vault_group }}'
    mode: '0644'

- name: Prepare Vault service
  ansible.builtin.template:
    src: vault.service.j2
    dest: /lib/systemd/system/vault.service
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: Start Vault
  block:
    - name: Populate service facts
      ansible.builtin.service_facts:

    - name: Restart Vault service
      when: ansible_facts.services['vault.service']['state'] == 'running'
      ansible.builtin.service:
        name: vault
        enabled: true
        state: restarted

    - name: Start Vault service
      when: ansible_facts.services['vault.service']['state'] != 'running'
      ansible.builtin.service:
        name: vault
        enabled: true
        state: started
